{"version":3,"sources":["components/NavgationBar.tsx","pages/About/About.tsx","pages/LandingPage/LandingPage.tsx","components/Demo.tsx","pages/WebFont/WebFont.tsx","pages/Text/Text.tsx","RoutingPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavgationBar","props","homeLink","routingBase","Navbar","style","backgroundColor","expand","NavbarBrand","href","className","Nav","navbar","NavItem","NavLink","About","LandingPage","language","monokai","to","Demo","DemoSpace","children","styled","div","WebFont","H5Font","fontFamily","H5FiraSansSmallCaps","H5OldFont","h5","Text","RootingPage","exact","path","component","App","ROUTER_BASENAME","basename","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4b3556b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Nav, Navbar, NavbarBrand, NavItem, NavLink } from \"reactstrap\";\n\ntype Props = { routingBase: string };\n\nexport const NavgationBar: React.FC<Props> = (props) => {\n  const homeLink = props.routingBase === \"/\" ? \"/\" : props.routingBase + \"/\";\n\n  return (\n    <Navbar style={{ backgroundColor: \"#333\" }} expand=\"lg\">\n      <NavbarBrand href={homeLink} className=\"mx-3 text-white\">\n        CSS Primer\n      </NavbarBrand>\n\n      <Nav className=\"mr-auto\" navbar>\n        <NavItem>\n          <NavLink\n            href=\"https://github.com/penicillin0/css-primer\"\n            className=\"text-white\"\n          >\n            GitHub\n          </NavLink>\n        </NavItem>\n      </Nav>\n    </Navbar>\n  );\n};\n","import React from \"react\";\n\ntype Props = {};\n\nexport const About: React.FC<Props> = () => {\n  return <div>This is about page</div>;\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monokai } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\ntype Props = {};\n\nconst cssCode = `span:before {\n             content: \"Hello\"\n}\nspan:after {\n            content: \"World\"\n}`;\n\nexport const LandingPage: React.FC<Props> = () => {\n  return (\n    <div>\n      <h1 className=\"my-4\">Welcome to CSS3 primer</h1>\n      <SyntaxHighlighter language=\"css\" style={monokai}>\n        {cssCode}\n      </SyntaxHighlighter>\n      <div className=\"mx-4\">\n        CSS3を学ぶためのページです。\n        <h2 className=\"mt-4 mb-3\">Pages</h2>\n        <li>\n          <Link to=\"/webfont\">Web font</Link>\n        </li>\n        <li>\n          <Link to=\"/text\">Text</Link>\n        </li>\n      </div>\n    </div>\n  );\n};\n","import React, { Children } from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {};\n\nexport const Demo: React.FC<Props> = (props) => {\n  return <DemoSpace>{props.children}</DemoSpace>;\n};\n\nconst DemoSpace = styled.div`\n  background-color: lightyellow;\n  padding: 20px 0px 20px 40px;\n  margin-bottom: 50px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monokai } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { Demo } from \"../../components/Demo\";\n\ntype Props = {};\n\nexport const WebFont: React.FC<Props> = () => {\n  return (\n    <div>\n      <h1 className=\"my-3\">WebFont</h1>\n      <p className=\"mb-5\">ここではWebフォントを使って文字を表示します。</p>\n      <h3 className=\"mb-3\">\n        <b>Web フォントを定義する</b>\n      </h3>\n      <h4>@font-face</h4>\n      <p>@font-faceというルール使ってフォントを定義することができます。</p>\n      <SyntaxHighlighter language=\"css\" style={monokai} className=\"mb-3\">\n        {`@font-face {\n  font-family: \"ChunkFive\";\n  src: url(./fonts/ChunkFive.woff) format(\"woff\");\n}`}\n      </SyntaxHighlighter>\n      <Demo>\n        <h5>This is Basic Font</h5>\n        <H5Font fontFamily=\"ChunkFive\">This is ChunkFive Font</H5Font>\n      </Demo>\n      <p>\n        複数のフォントフェイスを定義することも可能です。例えば斜体のフォントを定義してみましょう。\n      </p>\n      <SyntaxHighlighter language=\"css\" style={monokai} className=\"mb-3\">\n        {`/* 通常のフォントの定義 */\n@font-face {\n  font-family: \"Gentium Basic\";\n  src: url(./fonts/GentiumBasic-Regular.ttf) format(\"truetype\");\n}\n\n/* 斜体(Italic)フォントの定義 */\n@font-face {\n  font-family: \"Gentium Basic\";\n  font-style: italic;\n  src: url(./fonts/GentiumBasic-Italic.ttf) format(\"truetype\");\n}`}\n      </SyntaxHighlighter>\n      <p>\n        このとき、斜体フォントのための定義は必要なく、マークアップのみで適用できます。\n      </p>\n      <SyntaxHighlighter language=\"html\" style={monokai} className=\"mb-3\">\n        {`<h5>This is Gentium Basic</h5>\n<h5>\n  <em>This is Gentium Basic Italic</em>\n</h5>`}\n      </SyntaxHighlighter>\n      <Demo>\n        <H5Font fontFamily=\"Gentium Basic\">This is Gentium Basic</H5Font>\n        <H5Font fontFamily=\"Gentium Basic\">\n          <em>This is Gentium Basic Italic</em>\n        </H5Font>\n      </Demo>\n      <p>\n        Webフォントを使う場合、全てのフォントフェイスについてフォントファイルを用意し、定義する必要があります。\n        フォントファイルを用意せずにフォントフェイスを適用しようとすると、ブラウザが自動で用意したスタイルになるため注意が必要です。\n      </p>\n      <h3 className=\"mt-5 mb-3\">\n        <b>その他の機能</b>\n      </h3>\n      <h4>font-stretch</h4>\n      <p>\n        一部のフォントファミリーでは文字の幅を縮めることができます。幅の狭い順に、以下のようなキーワード値を持ちます。\n      </p>\n      <SyntaxHighlighter language=\"css\" style={monokai} className=\"mb-3\">\n        {`font-stretch: ultra-condensed;\nfont-stretch: extra-condensed;\nfont-stretch: condensed;\nfont-stretch: semi-condensed;\nfont-stretch: normal;\nfont-stretch: semi-expanded;\nfont-stretch: expanded;\nfont-stretch: extra-expanded;\nfont-stretch: ultra-expanded;`}\n      </SyntaxHighlighter>\n      <p>\n        ブラウザによって使用方法が若干異なるため注意が必要です。今回はChromeを想定して、@font-face\n        に追加してみます。各ブラウザの対応状況は\n        <a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/font-stretch#browser_compatibility\">\n          こちら\n        </a>\n        で参照できます。\n      </p>\n      <p>\n        上から、condensed, semi-condensed, normal, semi-expanded, expandedの順。\n      </p>\n      <Demo>\n        <H5Font fontFamily=\"EncodeSans Condensed\">This is EncodeSans</H5Font>\n        <H5Font fontFamily=\"EncodeSans SemiCondensed\">\n          This is EncodeSans\n        </H5Font>\n        <H5Font fontFamily=\"EncodeSans\">This is EncodeSans</H5Font>\n        <H5Font fontFamily=\"EncodeSans SemiExpanded\">This is EncodeSans</H5Font>\n        <H5Font fontFamily=\"EncodeSans Expanded\">This is EncodeSans</H5Font>\n      </Demo>\n      <h4>font-feature-setting</h4>\n      <p>\n        TrueType形式のフォントは歴史が古く、拡大縮小しても輪郭がガタガタしないスケーラブルなフォントとして普及しました。\n        そのTrueTypeを拡張したものがOpenTypeです。リガチャー(合次)、スウォッチ、特殊な数字など様々な指定が可能です。\n        font-feature-settingというプロパティは、OpenTypeの機能を使うためのものです。\n      </p>\n      <SyntaxHighlighter language=\"css\" style={monokai} className=\"mb-3\">\n        {`font-feature-settings: \"smcp\";`}\n      </SyntaxHighlighter>\n      <Demo>\n        <H5FiraSansSmallCaps>This is Fira-sans</H5FiraSansSmallCaps>\n      </Demo>\n      <SyntaxHighlighter language=\"css\" style={monokai} className=\"mb-3\">\n        {`font-feature-settings: \"trad\";`}\n      </SyntaxHighlighter>\n      <Demo>\n        <H5OldFont>旧字体</H5OldFont>(旧字体)\n      </Demo>\n      font-feature-settingの機能は\n      <a href=\"https://drafts.csswg.org/css-fonts-3/#propdef-font-variant\">\n        font-variant\n      </a>\n      でも利用できることがあります。\n      font-variantでサポートされているなら極力そちらを使用することが推奨されています。\n      <a href=\"https://drafts.csswg.org/css-fonts-3/#propdef-font-feature-settings\">\n        (参考)\n      </a>\n    </div>\n  );\n};\n\nconst H5Font = styled.h5<{ fontFamily: string }>`\n  font-family: ${(props) => props.fontFamily}, sans-serif;\n`;\n\nconst H5FiraSansSmallCaps = styled.h5`\n  font-family: \"FiraSansR\";\n  font-feature-settings: \"smcp\";\n`;\n\nconst H5OldFont = styled.h5`\n  font-family: \"FiraSansR\";\n  font-feature-settings: \"trad\";\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {};\n\nexport const Text: React.FC<Props> = () => {\n  return (\n    <>\n      <h1 className=\"my-3\">Text</h1>\n      <p className=\"mb-5\">テキストモジュールについての機能を見ていきます。</p>\n      <h3 className=\"mb-3\">\n        <b>text-shadow</b>\n      </h3>\n      <p>\n        この機能は古くから用意されていましたが、実装が少ないという理由でCSS2.1からは削除されています。\n        CSS3から復活し現在は多くのブラウザで実装されいます。\n      </p>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { About } from \"./pages/About/About\";\nimport { LandingPage } from \"./pages/LandingPage/LandingPage\";\nimport { WebFont } from \"./pages/WebFont/WebFont\";\nimport { Text } from \"./pages/Text/Text\";\n\nexport const RootingPage = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={LandingPage} />\n      <Route exact path=\"/webfont\" component={WebFont} />\n      <Route exact path=\"/about\" component={About} />\n      <Route exact path=\"/text\" component={Text} />\n    </Switch>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\nimport { NavgationBar } from \"./components/NavgationBar\";\nimport { RootingPage } from \"./RoutingPage\";\n\nexport function App() {\n  const ROUTER_BASENAME =\n    process.env.NODE_ENV === \"development\" ? \"/\" : \"/css-primer\";\n\n  return (\n    <Router basename={ROUTER_BASENAME}>\n      <NavgationBar routingBase={ROUTER_BASENAME} />\n      <Container className=\"my-5\" style={{ maxWidth: \"960px\" }}>\n        <RootingPage />\n      </Container>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}